* how to run the server from bash in the docker container
Don't use bin/gremlin-server.sh directly
Instead, from /opt/gremlin-server, run:
/docker-entrypoint.sh conf/gremlin-server-jbb.yaml
* TODO ? is indexing working
** some neo4j.properties settings I tried
See also docker/config/*.properties
I seem able to index on exactly one thing,
gremlin.neo4j.conf.dbms.auto_index.nodes.keys=name,date
  # works:         =name
  # works:         = name date
  # works:         = name (name date)
  # works:         = name [name date]
  # does not work: = name, date
  # does not work: = name , date
  # does not work: =name,status
  # does not work: =[name,status]
  # does not work: ={name,status}
  # does not work: =(name,status)
  # Also a comma-separated list with one item per line doesn't work,
  #  whether the commas are trailing or leading.
  # This throws no errors, which makes me think it doesn't get read:
  #   =
  #     name
  #     status
  #     (name, status)
  #     -[]x,x
** TODO comm, pending
Once it works, report to debug-ito:
https://github.com/debug-ito/greskell/issues/3
* TODO read/write a graph
* important folders and websites
** greskell
~/code/haskell-libs/greskell
https://hackage.haskell.org/package/greskell
** hasbolt
~/code/haskell-libs/hasbolt
https://neo4j.com/developer/haskell/
https://hackage.haskell.org/package/hasbolt
** tinkerpop
~/installs/apache-tinkerpop
https://tinkerpop.apache.org/docs/current/reference/
* what I installed
Nothing outside of
  installs/gremlin*
* creds
** tinkerpop issue tracker
https://issues.apache.org/jira/secure/WelcomeToJIRA.jspa
gmail
jeffbrown
pharoagletmypplgo
* haskell libraries, pros and cons
** for Neo4j
hasbolt is for Neo4j 3.x
haskell-neo4j-client is for Neo4j 2.x
** for Gremlin
according to Josh:
  Greskell is a full traversal language
  Gremlin-Haskell somehow is not that
* probably stale
** using neo4j directly for controlling indexes
*** all Neo4j asks (lately) is that you specify which indexes to maintain
 It doesn't need you to maintain them -- it'll figure that out.
 https://neo4j.com/docs/cypher-manual/current/schema/index/
*** haskell-neo4j-client seems to provide all (3 of) those operations
 https://hackage.haskell.org/package/haskell-neo4j-client-0.3.2.4/docs/Database-Neo4j.html#g:8
*** but maybe it can be entirely automatic -- smsn's config file suggests so
**** the neo4j config file that smsn uses
***** ~/_stale,pre-2019-07/smsn+/docker-smsn/neo4j.properties
***** it's four lines
   gremlin.neo4j.directory=/mnt/smsn-data/neo4j # CHANGE ME: this is a permanent directory for your graph data.
   gremlin.graph=org.apache.tinkerpop.gremlin.neo4j.structure.Neo4jGraph
   gremlin.neo4j.conf.node_auto_indexing=true
   gremlin.neo4j.conf.relationship_auto_indexing=true
**** OTOH smsn's code reaches into Neo4j too
 ~/_stale,pre-2019-07/smsn+/docker-smsn/neo4j.properties
